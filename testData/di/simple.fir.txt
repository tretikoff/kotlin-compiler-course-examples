FILE: simple.kt
    package foo.bar

    public final annotation class OtherAnnotation : R|kotlin/Annotation| {
        public constructor(name: R|kotlin/String|): R|foo/bar/OtherAnnotation| {
            super<R|kotlin/Any|>()
        }

        public final val name: R|kotlin/String| = R|<local>/name|
            public get(): R|kotlin/String|

    }
    @R|foo/bar/OtherAnnotation|(name = String(x)) public final class ClassWithoutErrors : R|kotlin/Any| {
        public constructor(): R|foo/bar/ClassWithoutErrors| {
            super<R|kotlin/Any|>()
        }

    }
    public final var ext: R|kotlin/Int| = Int(0)
        public get(): R|kotlin/Int|
        public set(value: R|kotlin/Int|): R|kotlin/Unit|
    @R|org/itmo/my/pretty/plugin/Injected|(name = String(x)) public final class InjectedImpl : R|kotlin/Any| {
        public constructor(): R|foo/bar/InjectedImpl| {
            super<R|kotlin/Any|>()
        }

        init {
            R|foo/bar/ext| = R|foo/bar/ext|.R|kotlin/Int.plus|(Int(1))
        }

        public final val inner: R|kotlin/Int| = Int(3)
            public get(): R|kotlin/Int|

    }
    @R|org/itmo/my/pretty/plugin/Injectable|() public final class InjectableImpl : R|kotlin/Any| {
        public constructor(): R|foo/bar/InjectableImpl| {
            super<R|kotlin/Any|>()
        }

        public final val x: R|foo/bar/InjectedImpl|
            public get(): R|foo/bar/InjectedImpl|

    }
    @R|org/itmo/my/pretty/plugin/Injectable|() public final class InjectableImpl2 : R|kotlin/Any| {
        public constructor(): R|foo/bar/InjectableImpl2| {
            super<R|kotlin/Any|>()
        }

        public final val x: R|foo/bar/InjectedImpl|
            public get(): R|foo/bar/InjectedImpl|

    }
    public final fun box(): R|kotlin/String| {
        lval impl: R|foo/bar/InjectableImpl| = R|foo/bar/InjectableImpl.InjectableImpl|()
        when () {
            !=(R|<local>/impl|.R|foo/bar/InjectableImpl.x|.R|foo/bar/InjectedImpl.inner|, Int(3)) || !=(R|<local>/impl|.R|foo/bar/InjectableImpl.x|.R|foo/bar/InjectedImpl.inner|, Int(3)) ->  {
                ^box <strcat>(String(Fail with wrong initializer: ), R|<local>/impl|)
            }
        }

        when () {
            !=(R|foo/bar/ext|, Int(1)) ->  {
                ^box <strcat>(String(Initialized ), R|foo/bar/ext|, String( times instead: ), R|<local>/impl|)
            }
        }

        lval impl2: R|foo/bar/InjectableImpl2| = R|foo/bar/InjectableImpl2.InjectableImpl2|()
        ^box when () {
            ==(R|<local>/impl2|.R|foo/bar/InjectableImpl2.x|.R|foo/bar/InjectedImpl.inner|, Int(3)) && ==(R|foo/bar/ext|, Int(1)) ->  {
                String(OK)
            }
            else ->  {
                <strcat>(String(Fail: initiialized ), R|foo/bar/ext|, String( times ), R|<local>/impl2|)
            }
        }

    }
FILE: __GENERATED DECLARATIONS__.kt
    package foo.bar

    public final typealias Array1<T> = R|kotlin/Array<T>|
    public final typealias Array2<T> = R|kotlin/Array<foo/bar/Array1<T>>|
    public final typealias Array3<T> = R|kotlin/Array<foo/bar/Array2<T>>|
    public final typealias Array4<T> = R|kotlin/Array<foo/bar/Array3<T>>|
    public final typealias Array5<T> = R|kotlin/Array<foo/bar/Array4<T>>|
    public final typealias Array6<T> = R|kotlin/Array<foo/bar/Array5<T>>|
    public final typealias Array7<T> = R|kotlin/Array<foo/bar/Array6<T>>|
    public final typealias Array8<T> = R|kotlin/Array<foo/bar/Array7<T>>|
    public final typealias Array9<T> = R|kotlin/Array<foo/bar/Array8<T>>|
    public final typealias Array10<T> = R|kotlin/Array<foo/bar/Array9<T>>|
